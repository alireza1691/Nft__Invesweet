{
  "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "authorizedAddress",
          "type": "address"
        }
      ],
      "name": "authorize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "balance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "cheque",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        }
      ],
      "name": "getAuthorized",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawByAuthorized",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa90632bb562f017d616167499a4b0db9f101fe61cec0877ed645fca76b614674",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "transactionIndex": 0,
    "gasUsed": "1167543",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000080000000000000000000000000000000001000000000000000000000000000000000001000000000000000000000000000000000000020000000000000100000800000000000000000000000000000000400000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000002000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x14102a6aae160cf721bc48a152ef830e79df8e6bf1693fcf8d1cf235c79a2221",
    "transactionHash": "0xa90632bb562f017d616167499a4b0db9f101fe61cec0877ed645fca76b614674",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 4,
        "transactionHash": "0xa90632bb562f017d616167499a4b0db9f101fe61cec0877ed645fca76b614674",
        "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x14102a6aae160cf721bc48a152ef830e79df8e6bf1693fcf8d1cf235c79a2221"
      }
    ],
    "blockNumber": 4,
    "cumulativeGasUsed": "1167543",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "0f7d7c44612d78728c880c89d9d47139",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"authorizedAddress\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"cheque\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"getAuthorized\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawByAuthorized\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The name of the author\",\"details\":\"Explain to a developer any extra details\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"A title that should describe the contract/interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Explain to an end user what this does\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SafeTreasury.sol\":\"SafeTreasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0x6ebf1944ab804b8660eb6fc52f9fe84588cee01c2566a69023e59497e7d27f45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/SafeTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.17;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/interfaces/IERC20.sol\\\";\\n\\n/// @title A title that should describe the contract/interface\\n/// @author The name of the author\\n/// @notice Explain to an end user what this does\\n/// @dev Explain to a developer any extra details\\n\\n\\ncontract SafeTreasury is Ownable{\\n\\n    /* What we want?\\n    Function to deposit\\n    Function to withdraw\\n    Function to get permit for specific token to specific address\\n    Function to withdraw permtied amount of token\\n    Function to authorize another address that can withdraw all funds\\n    Function to remove authorize address\\n\\n\\n    */\\n// struct Token {\\n//     mapping (address => uint256) userBalance;\\n// }\\n\\nmapping (address => address) authorizedAddressesToMainAddress;\\nmapping (address => mapping(address => uint256)) tokenAddressToOwnerToBalance;\\n\\nfunction deposit(address tokenAddress, uint256 amount) external {\\n    (bool ok) = IERC20(tokenAddress).transferFrom(msg.sender, address(this), amount);\\n    require(ok,\\\"Transaction failed\\\");\\n    tokenAddressToOwnerToBalance[tokenAddress][msg.sender] += amount;\\n}\\n\\nfunction  withdraw (address tokenAddress, uint256 amount) external{\\n    uint256 balance = tokenAddressToOwnerToBalance[tokenAddress][msg.sender];\\n    if (balance < amount) {\\n        revert();\\n    }\\n    tokenAddressToOwnerToBalance[tokenAddress][msg.sender] -= amount;\\n    (bool ok) = IERC20(tokenAddress).transfer(msg.sender, amount);\\n    require(ok,\\\"failed\\\");\\n}\\nfunction withdrawByAuthorized(address tokenAddress,uint256 amount) external {\\n        address main = getAuthorized(msg.sender);\\n        uint256 mainAddressBalance = tokenAddressToOwnerToBalance[tokenAddress][main];\\n        if (mainAddressBalance < amount ) {\\n            revert();\\n        }\\n        tokenAddressToOwnerToBalance[tokenAddress][main] -= amount;\\n        (bool ok) = IERC20(tokenAddress).transfer(msg.sender, amount);\\n        require(ok,\\\"failed\\\");\\n}\\n\\nfunction transfer(address tokenAddress, address to, uint256 amount) external{\\n    uint256 balance = tokenAddressToOwnerToBalance[tokenAddress][msg.sender];\\n    if (balance >= amount) {\\n        tokenAddressToOwnerToBalance[tokenAddress][msg.sender] -= amount;\\n        IERC20(tokenAddress).transfer(to, (amount * 995)/1000);\\n    }\\n}\\n\\nfunction cheque(address tokenAddress, address to, uint256 amount) external{\\n    tokenAddressToOwnerToBalance[tokenAddress][msg.sender] -= amount;\\n    tokenAddressToOwnerToBalance[tokenAddress][to] += (amount * 995)/1000;\\n}\\nfunction authorize(address authorizedAddress) external {\\n    authorizedAddressesToMainAddress[authorizedAddress]= msg.sender;\\n}\\n\\n// View funcs\\nfunction balance(address tokenAddress, address userAddress) public view returns (uint256) {\\n    return tokenAddressToOwnerToBalance[tokenAddress][userAddress];\\n}\\n\\nfunction getAuthorized(address from) view public returns (address) {\\n    return authorizedAddressesToMainAddress[from];\\n}\\n\\n}\",\"keccak256\":\"0xedf0c5e3969ab8c80778a51d8846ee1e6c64a0923d8794aad9fa0ea2e597a07d\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6113b98061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063b203bb9911610071578063b203bb991461012a578063b6a5d7de1461015a578063beabacc814610176578063c731fc7b14610192578063f2fde38b146101c2578063f3fef3a3146101de576100a9565b806347e7ef24146100ae578063715018a6146100ca5780637e16165b146100d45780637e3534a3146100f05780638da5cb5b1461010c575b600080fd5b6100c860048036038101906100c39190610e4a565b6101fa565b005b6100d2610356565b005b6100ee60048036038101906100e99190610e8a565b61036a565b005b61010a60048036038101906101059190610e4a565b6104af565b005b6101146106a6565b6040516101219190610eec565b60405180910390f35b610144600480360381019061013f9190610f07565b6106cf565b6040516101519190610f56565b60405180910390f35b610174600480360381019061016f9190610f71565b610756565b005b610190600480360381019061018b9190610e8a565b6107d7565b005b6101ac60048036038101906101a79190610f71565b610992565b6040516101b99190610eec565b60405180910390f35b6101dc60048036038101906101d79190610f71565b6109fb565b005b6101f860048036038101906101f39190610e4a565b610a7e565b005b60008273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161023993929190610f9e565b6020604051808303816000875af1158015610258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027c919061100d565b9050806102be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b590611097565b60405180910390fd5b81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461034a91906110e6565b92505081905550505050565b61035e610c67565b6103686000610ce5565b565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103f6919061111a565b925050819055506103e86103e38261040e919061114e565b61041891906111bf565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104a391906110e6565b92505081905550505050565b60006104ba33610992565b90506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561054a57600080fd5b82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105d6919061111a565b9250508190555060008473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b815260040161061a9291906111f0565b6020604051808303816000875af1158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d919061100d565b90508061069f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069690611265565b60405180910390fd5b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b33600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811061098c5781600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108eb919061111a565b925050819055508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb846103e86103e386610920919061114e565b61092a91906111bf565b6040518363ffffffff1660e01b81526004016109479291906111f0565b6020604051808303816000875af1158015610966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a919061100d565b505b50505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610a03610c67565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a69906112f7565b60405180910390fd5b610a7b81610ce5565b50565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b0c57600080fd5b81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b98919061111a565b9250508190555060008373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610bdc9291906111f0565b6020604051808303816000875af1158015610bfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1f919061100d565b905080610c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5890611265565b60405180910390fd5b50505050565b610c6f610da9565b73ffffffffffffffffffffffffffffffffffffffff16610c8d6106a6565b73ffffffffffffffffffffffffffffffffffffffff1614610ce3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cda90611363565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610de182610db6565b9050919050565b610df181610dd6565b8114610dfc57600080fd5b50565b600081359050610e0e81610de8565b92915050565b6000819050919050565b610e2781610e14565b8114610e3257600080fd5b50565b600081359050610e4481610e1e565b92915050565b60008060408385031215610e6157610e60610db1565b5b6000610e6f85828601610dff565b9250506020610e8085828601610e35565b9150509250929050565b600080600060608486031215610ea357610ea2610db1565b5b6000610eb186828701610dff565b9350506020610ec286828701610dff565b9250506040610ed386828701610e35565b9150509250925092565b610ee681610dd6565b82525050565b6000602082019050610f016000830184610edd565b92915050565b60008060408385031215610f1e57610f1d610db1565b5b6000610f2c85828601610dff565b9250506020610f3d85828601610dff565b9150509250929050565b610f5081610e14565b82525050565b6000602082019050610f6b6000830184610f47565b92915050565b600060208284031215610f8757610f86610db1565b5b6000610f9584828501610dff565b91505092915050565b6000606082019050610fb36000830186610edd565b610fc06020830185610edd565b610fcd6040830184610f47565b949350505050565b60008115159050919050565b610fea81610fd5565b8114610ff557600080fd5b50565b60008151905061100781610fe1565b92915050565b60006020828403121561102357611022610db1565b5b600061103184828501610ff8565b91505092915050565b600082825260208201905092915050565b7f5472616e73616374696f6e206661696c65640000000000000000000000000000600082015250565b600061108160128361103a565b915061108c8261104b565b602082019050919050565b600060208201905081810360008301526110b081611074565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110f182610e14565b91506110fc83610e14565b9250828201905080821115611114576111136110b7565b5b92915050565b600061112582610e14565b915061113083610e14565b9250828203905081811115611148576111476110b7565b5b92915050565b600061115982610e14565b915061116483610e14565b925082820261117281610e14565b91508282048414831517611189576111886110b7565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006111ca82610e14565b91506111d583610e14565b9250826111e5576111e4611190565b5b828204905092915050565b60006040820190506112056000830185610edd565b6112126020830184610f47565b9392505050565b7f6661696c65640000000000000000000000000000000000000000000000000000600082015250565b600061124f60068361103a565b915061125a82611219565b602082019050919050565b6000602082019050818103600083015261127e81611242565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006112e160268361103a565b91506112ec82611285565b604082019050919050565b60006020820190508181036000830152611310816112d4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061134d60208361103a565b915061135882611317565b602082019050919050565b6000602082019050818103600083015261137c81611340565b905091905056fea2646970667358221220c70bfea1fcf5f98966d58b370ce56076e8160286ed0e5935d7d4db33afe7d16e64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063b203bb9911610071578063b203bb991461012a578063b6a5d7de1461015a578063beabacc814610176578063c731fc7b14610192578063f2fde38b146101c2578063f3fef3a3146101de576100a9565b806347e7ef24146100ae578063715018a6146100ca5780637e16165b146100d45780637e3534a3146100f05780638da5cb5b1461010c575b600080fd5b6100c860048036038101906100c39190610e4a565b6101fa565b005b6100d2610356565b005b6100ee60048036038101906100e99190610e8a565b61036a565b005b61010a60048036038101906101059190610e4a565b6104af565b005b6101146106a6565b6040516101219190610eec565b60405180910390f35b610144600480360381019061013f9190610f07565b6106cf565b6040516101519190610f56565b60405180910390f35b610174600480360381019061016f9190610f71565b610756565b005b610190600480360381019061018b9190610e8a565b6107d7565b005b6101ac60048036038101906101a79190610f71565b610992565b6040516101b99190610eec565b60405180910390f35b6101dc60048036038101906101d79190610f71565b6109fb565b005b6101f860048036038101906101f39190610e4a565b610a7e565b005b60008273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161023993929190610f9e565b6020604051808303816000875af1158015610258573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027c919061100d565b9050806102be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b590611097565b60405180910390fd5b81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461034a91906110e6565b92505081905550505050565b61035e610c67565b6103686000610ce5565b565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546103f6919061111a565b925050819055506103e86103e38261040e919061114e565b61041891906111bf565b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104a391906110e6565b92505081905550505050565b60006104ba33610992565b90506000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561054a57600080fd5b82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105d6919061111a565b9250508190555060008473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b815260040161061a9291906111f0565b6020604051808303816000875af1158015610639573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065d919061100d565b90508061069f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069690611265565b60405180910390fd5b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b33600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811061098c5781600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108eb919061111a565b925050819055508373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb846103e86103e386610920919061114e565b61092a91906111bf565b6040518363ffffffff1660e01b81526004016109479291906111f0565b6020604051808303816000875af1158015610966573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098a919061100d565b505b50505050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610a03610c67565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a69906112f7565b60405180910390fd5b610a7b81610ce5565b50565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610b0c57600080fd5b81600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b98919061111a565b9250508190555060008373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401610bdc9291906111f0565b6020604051808303816000875af1158015610bfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1f919061100d565b905080610c61576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5890611265565b60405180910390fd5b50505050565b610c6f610da9565b73ffffffffffffffffffffffffffffffffffffffff16610c8d6106a6565b73ffffffffffffffffffffffffffffffffffffffff1614610ce3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cda90611363565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610de182610db6565b9050919050565b610df181610dd6565b8114610dfc57600080fd5b50565b600081359050610e0e81610de8565b92915050565b6000819050919050565b610e2781610e14565b8114610e3257600080fd5b50565b600081359050610e4481610e1e565b92915050565b60008060408385031215610e6157610e60610db1565b5b6000610e6f85828601610dff565b9250506020610e8085828601610e35565b9150509250929050565b600080600060608486031215610ea357610ea2610db1565b5b6000610eb186828701610dff565b9350506020610ec286828701610dff565b9250506040610ed386828701610e35565b9150509250925092565b610ee681610dd6565b82525050565b6000602082019050610f016000830184610edd565b92915050565b60008060408385031215610f1e57610f1d610db1565b5b6000610f2c85828601610dff565b9250506020610f3d85828601610dff565b9150509250929050565b610f5081610e14565b82525050565b6000602082019050610f6b6000830184610f47565b92915050565b600060208284031215610f8757610f86610db1565b5b6000610f9584828501610dff565b91505092915050565b6000606082019050610fb36000830186610edd565b610fc06020830185610edd565b610fcd6040830184610f47565b949350505050565b60008115159050919050565b610fea81610fd5565b8114610ff557600080fd5b50565b60008151905061100781610fe1565b92915050565b60006020828403121561102357611022610db1565b5b600061103184828501610ff8565b91505092915050565b600082825260208201905092915050565b7f5472616e73616374696f6e206661696c65640000000000000000000000000000600082015250565b600061108160128361103a565b915061108c8261104b565b602082019050919050565b600060208201905081810360008301526110b081611074565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110f182610e14565b91506110fc83610e14565b9250828201905080821115611114576111136110b7565b5b92915050565b600061112582610e14565b915061113083610e14565b9250828203905081811115611148576111476110b7565b5b92915050565b600061115982610e14565b915061116483610e14565b925082820261117281610e14565b91508282048414831517611189576111886110b7565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006111ca82610e14565b91506111d583610e14565b9250826111e5576111e4611190565b5b828204905092915050565b60006040820190506112056000830185610edd565b6112126020830184610f47565b9392505050565b7f6661696c65640000000000000000000000000000000000000000000000000000600082015250565b600061124f60068361103a565b915061125a82611219565b602082019050919050565b6000602082019050818103600083015261127e81611242565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006112e160268361103a565b91506112ec82611285565b604082019050919050565b60006020820190508181036000830152611310816112d4565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061134d60208361103a565b915061135882611317565b602082019050919050565b6000602082019050818103600083015261137c81611340565b905091905056fea2646970667358221220c70bfea1fcf5f98966d58b370ce56076e8160286ed0e5935d7d4db33afe7d16e64736f6c63430008110033",
  "devdoc": {
    "author": "The name of the author",
    "details": "Explain to a developer any extra details",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "A title that should describe the contract/interface",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Explain to an end user what this does",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/SafeTreasury.sol:SafeTreasury",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 226,
        "contract": "contracts/SafeTreasury.sol:SafeTreasury",
        "label": "authorizedAddressesToMainAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 232,
        "contract": "contracts/SafeTreasury.sol:SafeTreasury",
        "label": "tokenAddressToOwnerToBalance",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}